<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

<!--读取properties-->
    <!--<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="locations">-->
            <!--&lt;!&ndash;<list>&ndash;&gt;-->
                <!--<value>classpath:properties/redis.properties</value>-->
            <!--&lt;!&ndash;</list>&ndash;&gt;-->
        <!--</property>-->
    <!--</bean>-->



    <!-- 引入redis properties属性文件 -->
    <context:property-placeholder location="classpath*:properties/redis.properties" ignore-unresolvable="true"/>


     <!--redis连接池 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
         <!--最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--最大连接数-->
        <property name="maxTotal" value="${redis.maxActive}"></property>
         <!--连接时最大的等待时间（毫秒） -->
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
         <!--在提取一个jedis实例时，是否提前进行验证操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>


    <!--redis连接工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
         <!--即使没有设置密码,password可以不设置值，但这项设置一定要保留 -->
        <!--<property name="password" value="${redis.password}"/>-->
        <property name="password" value=""></property>
         <!--即使没有设置密码,password可以不设置值，但这项设置一定要保留 -->

         <!--redis连接池 -->
        <property name="poolConfig" ref="poolConfig"></property>
    </bean>

     <!--redis操作模板,使用该对象可以操作redis -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">

        <property name="connectionFactory" ref="connectionFactory"/>
         <!--序列化策略 -->
        <!--如果不配置Serializer，那么存储的时候缺省使用String，如果用User类型存储，那么会提示错误User can't cast to String！！  -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>

        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>

    <!--自定义redis工具类,在需要缓存的地方注入此类  -->
    <bean id="redisUtil" class="com.util.RedisUtil">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

</beans>
